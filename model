UniTR(
  (vfe): DynamicPillarVFE(
    (pfn_layers): ModuleList(
      (0): PFNLayerV2(
        (linear): Linear(in_features=11, out_features=64, bias=False)
        (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
      (1): PFNLayerV2(
        (linear): Linear(in_features=128, out_features=128, bias=False)
        (norm): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
  )
  (mm_backbone): UniTR(
    (image_input_layer): UniTRInputLayer(
      (posembed_layers): ModuleList(
        (0): ModuleList(
          (0): ModuleList(
            (0): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=2, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
            (1): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=2, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
          )
          (1): ModuleList(
            (0): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=2, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
            (1): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=2, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
          )
          (2): ModuleList(
            (0): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=2, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
            (1): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=2, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
          )
          (3): ModuleList(
            (0): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=2, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
            (1): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=2, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
          )
        )
      )
    )
    (lidar_input_layer): UniTRInputLayer(
      (posembed_layers): ModuleList(
        (0): ModuleList(
          (0): ModuleList(
            (0): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=2, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
            (1): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=2, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
          )
          (1): ModuleList(
            (0): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=2, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
            (1): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=2, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
          )
          (2): ModuleList(
            (0): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=2, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
            (1): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=2, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
          )
          (3): ModuleList(
            (0): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=2, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
            (1): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=2, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
          )
        )
      )
    )
    (patch_embed): PatchEmbed(
      (adap_padding): AdaptivePadding()
      (projection): Conv2d(3, 128, kernel_size=(8, 8), stride=(8, 8))
      (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (stage_0): ModuleList(
      (0): UniTRBlock(
        (encoder_list): ModuleList(
          (0): UniTR_EncoderLayer(
            (win_attn): SetAttention(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
              )
              (linear1): Linear(in_features=128, out_features=256, bias=True)
              (dropout): Dropout(p=0, inplace=False)
              (linear2): Linear(in_features=256, out_features=128, bias=True)
              (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (lidar_linear1): Linear(in_features=128, out_features=256, bias=True)
              (lidar_dropout): Dropout(p=0, inplace=False)
              (lidar_linear2): Linear(in_features=256, out_features=128, bias=True)
              (lidar_norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (lidar_norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (dropout1): Identity()
              (dropout2): Identity()
            )
            (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          )
          (1): UniTR_EncoderLayer(
            (win_attn): SetAttention(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
              )
              (linear1): Linear(in_features=128, out_features=256, bias=True)
              (dropout): Dropout(p=0, inplace=False)
              (linear2): Linear(in_features=256, out_features=128, bias=True)
              (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (lidar_linear1): Linear(in_features=128, out_features=256, bias=True)
              (lidar_dropout): Dropout(p=0, inplace=False)
              (lidar_linear2): Linear(in_features=256, out_features=128, bias=True)
              (lidar_norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (lidar_norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (dropout1): Identity()
              (dropout2): Identity()
            )
            (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
      (1): UniTRBlock(
        (encoder_list): ModuleList(
          (0): UniTR_EncoderLayer(
            (win_attn): SetAttention(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
              )
              (linear1): Linear(in_features=128, out_features=256, bias=True)
              (dropout): Dropout(p=0, inplace=False)
              (linear2): Linear(in_features=256, out_features=128, bias=True)
              (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (lidar_linear1): Linear(in_features=128, out_features=256, bias=True)
              (lidar_dropout): Dropout(p=0, inplace=False)
              (lidar_linear2): Linear(in_features=256, out_features=128, bias=True)
              (lidar_norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (lidar_norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (dropout1): Identity()
              (dropout2): Identity()
            )
            (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          )
          (1): UniTR_EncoderLayer(
            (win_attn): SetAttention(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
              )
              (linear1): Linear(in_features=128, out_features=256, bias=True)
              (dropout): Dropout(p=0, inplace=False)
              (linear2): Linear(in_features=256, out_features=128, bias=True)
              (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (lidar_linear1): Linear(in_features=128, out_features=256, bias=True)
              (lidar_dropout): Dropout(p=0, inplace=False)
              (lidar_linear2): Linear(in_features=256, out_features=128, bias=True)
              (lidar_norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (lidar_norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (dropout1): Identity()
              (dropout2): Identity()
            )
            (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
      (2): UniTRBlock(
        (encoder_list): ModuleList(
          (0): UniTR_EncoderLayer(
            (win_attn): SetAttention(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
              )
              (linear1): Linear(in_features=128, out_features=256, bias=True)
              (dropout): Dropout(p=0, inplace=False)
              (linear2): Linear(in_features=256, out_features=128, bias=True)
              (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (lidar_linear1): Linear(in_features=128, out_features=256, bias=True)
              (lidar_dropout): Dropout(p=0, inplace=False)
              (lidar_linear2): Linear(in_features=256, out_features=128, bias=True)
              (lidar_norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (lidar_norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (dropout1): Identity()
              (dropout2): Identity()
            )
            (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          )
          (1): UniTR_EncoderLayer(
            (win_attn): SetAttention(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
              )
              (linear1): Linear(in_features=128, out_features=256, bias=True)
              (dropout): Dropout(p=0, inplace=False)
              (linear2): Linear(in_features=256, out_features=128, bias=True)
              (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (lidar_linear1): Linear(in_features=128, out_features=256, bias=True)
              (lidar_dropout): Dropout(p=0, inplace=False)
              (lidar_linear2): Linear(in_features=256, out_features=128, bias=True)
              (lidar_norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (lidar_norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (dropout1): Identity()
              (dropout2): Identity()
            )
            (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
      (3): UniTRBlock(
        (encoder_list): ModuleList(
          (0): UniTR_EncoderLayer(
            (win_attn): SetAttention(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
              )
              (linear1): Linear(in_features=128, out_features=256, bias=True)
              (dropout): Dropout(p=0, inplace=False)
              (linear2): Linear(in_features=256, out_features=128, bias=True)
              (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (lidar_linear1): Linear(in_features=128, out_features=256, bias=True)
              (lidar_dropout): Dropout(p=0, inplace=False)
              (lidar_linear2): Linear(in_features=256, out_features=128, bias=True)
              (lidar_norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (lidar_norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (dropout1): Identity()
              (dropout2): Identity()
            )
            (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          )
          (1): UniTR_EncoderLayer(
            (win_attn): SetAttention(
              (self_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
              )
              (linear1): Linear(in_features=128, out_features=256, bias=True)
              (dropout): Dropout(p=0, inplace=False)
              (linear2): Linear(in_features=256, out_features=128, bias=True)
              (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (lidar_linear1): Linear(in_features=128, out_features=256, bias=True)
              (lidar_dropout): Dropout(p=0, inplace=False)
              (lidar_linear2): Linear(in_features=256, out_features=128, bias=True)
              (lidar_norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (lidar_norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
              (dropout1): Identity()
              (dropout2): Identity()
            )
            (norm): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
    )
    (residual_norm_stage_0): ModuleList(
      (0): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
      (2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
      (3): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (lidar_residual_norm_stage_0): ModuleList(
      (0): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
      (1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
      (2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
      (3): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
    )
    (map_image2lidar_layer): MapImage2Lidar()
    (image2lidar_input_layer): UniTRInputLayer(
      (posembed_layers): ModuleList(
        (0): ModuleList(
          (0): ModuleList(
            (0): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=2, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
            (1): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=2, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
          )
        )
      )
    )
    (neighbor_pos_embed): PositionEmbeddingLearned(
      (position_embedding_head): Sequential(
        (0): Linear(in_features=2, out_features=128, bias=True)
        (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Linear(in_features=128, out_features=128, bias=True)
      )
    )
    (map_lidar2image_layer): MapLidar2Image()
    (lidar2image_input_layer): UniTRInputLayer(
      (posembed_layers): ModuleList(
        (0): ModuleList(
          (0): ModuleList(
            (0): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=3, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
            (1): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=3, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
          )
          (1): ModuleList(
            (0): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=3, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
            (1): PositionEmbeddingLearned(
              (position_embedding_head): Sequential(
                (0): Linear(in_features=3, out_features=128, bias=True)
                (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Linear(in_features=128, out_features=128, bias=True)
              )
            )
          )
        )
      )
    )
  )
  (map_to_bev_module): PointPillarScatter3d()
  (neck): None
  (vtransform): None
  (fuser): None
  (backbone_2d): BaseBEVResBackbone(
    (blocks): ModuleList(
      (0): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu1): ReLU()
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu2): ReLU()
          (downsample_layer): Sequential(
            (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu1): ReLU()
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu2): ReLU()
        )
      )
      (1): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu1): ReLU()
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu2): ReLU()
          (downsample_layer): Sequential(
            (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu1): ReLU()
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu2): ReLU()
        )
        (2): BasicBlock(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu1): ReLU()
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu2): ReLU()
        )
      )
      (2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu1): ReLU()
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu2): ReLU()
          (downsample_layer): Sequential(
            (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu1): ReLU()
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu2): ReLU()
        )
        (2): BasicBlock(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu1): ReLU()
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu2): ReLU()
        )
      )
      (3): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu1): ReLU()
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu2): ReLU()
          (downsample_layer): Sequential(
            (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu1): ReLU()
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu2): ReLU()
        )
        (2): BasicBlock(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu1): ReLU()
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu2): ReLU()
        )
      )
    )
    (deblocks): ModuleList(
      (0): Sequential(
        (0): Conv2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (1): Sequential(
        (0): ConvTranspose2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (2): Sequential(
        (0): ConvTranspose2d(256, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (3): Sequential(
        (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
  )
  (dense_head): TransFusionHead(
    (loss_cls): SigmoidFocalClassificationLoss()
    (loss_bbox): L1Loss()
    (loss_heatmap): GaussianFocalLoss()
    (shared_conv): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (heatmap_head): Sequential(
      (0): BasicBlock2D(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (1): Conv2d(128, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (class_encoding): Conv1d(10, 128, kernel_size=(1,), stride=(1,))
    (decoder): TransformerDecoderLayer(
      (self_attn): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
      )
      (multihead_attn): MultiheadAttention(
        (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
      )
      (linear1): Linear(in_features=128, out_features=256, bias=True)
      (dropout): Dropout(p=0.1, inplace=False)
      (linear2): Linear(in_features=256, out_features=128, bias=True)
      (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
      (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
      (norm3): LayerNorm((128,), eps=1e-05, elementwise_affine=True)
      (dropout1): Dropout(p=0.1, inplace=False)
      (dropout2): Dropout(p=0.1, inplace=False)
      (dropout3): Dropout(p=0.1, inplace=False)
      (self_posembed): PositionEmbeddingLearned(
        (position_embedding_head): Sequential(
          (0): Conv1d(2, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
        )
      )
      (cross_posembed): PositionEmbeddingLearned(
        (position_embedding_head): Sequential(
          (0): Conv1d(2, 128, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
          (3): Conv1d(128, 128, kernel_size=(1,), stride=(1,))
        )
      )
    )
    (prediction_head): SeparateHead_Transfusion(
      (center): Sequential(
        (0): Sequential(
          (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Conv1d(64, 2, kernel_size=(1,), stride=(1,))
      )
      (height): Sequential(
        (0): Sequential(
          (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Conv1d(64, 1, kernel_size=(1,), stride=(1,))
      )
      (dim): Sequential(
        (0): Sequential(
          (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Conv1d(64, 3, kernel_size=(1,), stride=(1,))
      )
      (rot): Sequential(
        (0): Sequential(
          (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Conv1d(64, 2, kernel_size=(1,), stride=(1,))
      )
      (vel): Sequential(
        (0): Sequential(
          (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Conv1d(64, 2, kernel_size=(1,), stride=(1,))
      )
      (iou): Sequential(
        (0): Sequential(
          (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Conv1d(64, 1, kernel_size=(1,), stride=(1,))
      )
      (heatmap): Sequential(
        (0): Sequential(
          (0): Conv1d(128, 64, kernel_size=(1,), stride=(1,))
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Conv1d(64, 10, kernel_size=(1,), stride=(1,))
      )
    )
  )
)
